/////////////////////////////////////
// DO NOT EDIT THIS FILE DIRECTLY,
// THIS FILE WAS AUTO GENERATED.
/////////////////////////////////////

import { ObjectType, Field, Int } from "@nestjs/graphql";

import { RolePermission as PrismaRolePermission } from "../client";

import { BasePermission } from "./Permission.model";
import { BaseRole } from "./Role.model";

export type RolePermissionConstructor = {
  permissionId: number;
  roleId: number;
  createdAt?: Date | null;
  permission?: BasePermission | null;
  role?: BaseRole | null;
};

@ObjectType({ isAbstract: true })
export class BaseRolePermission implements PrismaRolePermission {
  @Field(() => Int!, { nullable: false })
  readonly permissionId: number;

  @Field(() => Int!, { nullable: false })
  readonly roleId: number;

  @Field(() => Date!, { nullable: false })
  createdAt: Date;

  @Field(() => BasePermission, { nullable: true })
  permission: null | BasePermission;

  @Field(() => BaseRole, { nullable: true })
  role: null | BaseRole;

  constructor(model: RolePermissionConstructor) {
    this.permissionId = model.permissionId;
    this.roleId = model.roleId;
    this.createdAt = model.createdAt ?? new Date();
    this.permission = model.permission ?? null;
    this.role = model.role ?? null;
  }

  static fromHash(hash: PrismaRolePermission): BaseRolePermission {
    return new BaseRolePermission(hash);
  }

  toHash(): PrismaRolePermission {
    const { permission, role, ...entity } = this;
    return entity;
  }
}
